name: Changelog

on:
  delete:
    
  release:
    type: published
    
  issues:
    types: [edited]

jobs:
  generate_changelog:
    runs-on: ubuntu-latest
    name: Generate changelog for master branch
    steps:
      - uses: actions/checkout@v1

      - name: Generate changelog
        uses: charmixer/auto-changelog-action@v1
        with:
          token: ${{ secrets.YOUR_GITHUB_TOKEN }}

      - name: Commit files for changelog file
        env:
          CI_USER: ${{ secrets.YOUR_GITHUB_USER }}
          CI_EMAIL: ${{ secrets.YOUR_GITHUB_EMAIL }}
        run: |
          git config --local user.email "$CI_EMAIL"
          git config --local user.name "$CI_USER"
          git add CHANGELOG.md && git commit -m 'Updated CHANGELOG.md' && echo ::set-env name=push::1 || echo "No changes to CHANGELOG.md"

      - name: Push changes
        if: env.push == 1
        env:
          CI_USER: ${{ secrets.YOUR_GITHUB_USER }}
          CI_TOKEN: ${{ secrets.YOUR_GITHUB_TOKEN }}
        run: |
          git push "https://$CI_USER:$CI_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:master          
      - name: Update version
        id: version
        run: |
          echo "GITHUB_REF is a tag you set for the release"
          echo "Your GitHub ref: ${GITHUB_REF}"
          VERSION=`echo "${GITHUB_REF}" | cut -f 3 -d "/"`
          echo "Preparing version ${VERSION}"
          echo "__version__ = \"${VERSION}\"" > __version__.py
          echo "##[set-output name=version;]$(echo ${VERSION})"
      - name: Create Pull Request
        uses: actions/checkout@v1
        with:
          commit-message: Release ${{ steps.version.outputs.version }}
          labels: release, bot
          title: "Release ${{ steps.version.outputs.version }}"
          body: |
            # Release ${{ steps.version.outputs.version }}

            Merge this PR to update your version and changelog!

            ## Included Pull Requests

            ${{ steps.changelog.outputs.pulls_list_md }}
